"use strict";(self.webpackChunkaminsaied=self.webpackChunkaminsaied||[]).push([[8763],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>u});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),c=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(t),u=a,y=m["".concat(i,".").concat(u)]||m[u]||d[u]||o;return t?r.createElement(y,p(p({ref:n},s),{},{components:t})):r.createElement(y,p({ref:n},s))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,p=new Array(o);p[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,p[1]=l;for(var c=2;c<o;c++)p[c]=t[c];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5466:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>p,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const o={title:"Conda",description:"Package management for Python with Conda."},p=void 0,l={unversionedId:"dsref/python/conda_envs",id:"dsref/python/conda_envs",title:"Conda",description:"Package management for Python with Conda.",source:"@site/docs/dsref/python/conda_envs.md",sourceDirName:"dsref/python",slug:"/dsref/python/conda_envs",permalink:"/docs/dsref/python/conda_envs",draft:!1,tags:[],version:"current",frontMatter:{title:"Conda",description:"Package management for Python with Conda."},sidebar:"dsrefSidebar",previous:{title:"Python",permalink:"/docs/category/python"},next:{title:"MkDocs",permalink:"/docs/dsref/python/mkdocs"}},i={},c=[{value:"Create conda environments from yml file",id:"create-conda-environments-from-yml-file",level:2},{value:"Example: <code>pyspark</code>",id:"example-pyspark",level:2}],s={toc:c};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html"},"Conda docs")),(0,a.kt)("h2",{id:"create-conda-environments-from-yml-file"},"Create conda environments from yml file"),(0,a.kt)("p",null,"Specify your conda environment in a ",(0,a.kt)("inlineCode",{parentName:"p"},"env.yml")," file like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"name: aml\nchannels:\n  - defaults\n  - anaconda\ndependencies:\n  - python=3.8\n  - pip\n  - pip:\n    - azureml-sdk\n")),(0,a.kt)("p",null,"Then run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"conda env create -f env.yml\n")),(0,a.kt)("p",null,"To create the conda environment ",(0,a.kt)("inlineCode",{parentName:"p"},"aml"),"."),(0,a.kt)("p",null,"To update your environment, modify the ",(0,a.kt)("inlineCode",{parentName:"p"},"env.yml")," file and run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"conda env update -f env.yml --prune\n")),(0,a.kt)("p",null,"Note: the ",(0,a.kt)("inlineCode",{parentName:"p"},"--prune")," flag will remove any dependencies that are no longer required."),(0,a.kt)("h2",{id:"example-pyspark"},"Example: ",(0,a.kt)("inlineCode",{parentName:"h2"},"pyspark")),(0,a.kt)("p",null,"Let's set up a new conda environment with pyspark. Since we want to have a jupyter kernel tied to this environment we also add ",(0,a.kt)("inlineCode",{parentName:"p"},"ipykernel")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"jupyter"),". In this example we specify the python version."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"$ conda create -n pyspark python=3.6 pyspark ipykernel jupyter\n")),(0,a.kt)("p",null,"Now activate the environment and create the kernel"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"$ conda activate pyspark\n$ ipython kernel install --user --name=<any_name_for_kernel>\n")))}d.isMDXComponent=!0}}]);