"use strict";(self.webpackChunkaminsaied=self.webpackChunkaminsaied||[]).push([[294],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),h=a,m=d["".concat(p,".").concat(h)]||d[h]||c[h]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2346:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={title:"Sphinx",description:"Sphinx documentation generator with Azure Web Apps."},i=void 0,l={unversionedId:"dsref/python/sphinx",id:"dsref/python/sphinx",title:"Sphinx",description:"Sphinx documentation generator with Azure Web Apps.",source:"@site/docs/dsref/python/sphinx.md",sourceDirName:"dsref/python",slug:"/dsref/python/sphinx",permalink:"/docs/dsref/python/sphinx",draft:!1,tags:[],version:"current",frontMatter:{title:"Sphinx",description:"Sphinx documentation generator with Azure Web Apps."},sidebar:"dsrefSidebar",previous:{title:"Pandas",permalink:"/docs/dsref/python/pandas"},next:{title:"VS Code Debugger",permalink:"/docs/dsref/python/vscode_debugger"}},p={},s=[{value:"Webapp",id:"webapp",level:2},{value:"Contribution",id:"contribution",level:3},{value:"The layout",id:"the-layout",level:4},{value:"How to add a new file",id:"how-to-add-a-new-file",level:4},{value:"Setup",id:"setup",level:3}],u={toc:s};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"webapp"},"Webapp"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"We use sphinx to generate our documentation"),(0,a.kt)("li",{parentName:"ul"},"We use Azure webapps to host it")),(0,a.kt)("h3",{id:"contribution"},"Contribution"),(0,a.kt)("p",null,"Most of the process can be automated by CI/CD pipeline:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Build docstrings"),(0,a.kt)("li",{parentName:"ul"},"Builds the html files")),(0,a.kt)("p",null,"There are a few things to understand how to use it."),(0,a.kt)("h4",{id:"the-layout"},"The layout"),(0,a.kt)("p",null,"Suppose you have a library like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"my-repo/\n    requirements.txt  # reqs for src code to run\n    src/\n        # my library is here\n    docs/\n        # create this for your documentation\n")),(0,a.kt)("p",null,"We will generate / create the following under ",(0,a.kt)("inlineCode",{parentName:"p"},"docs"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docs/\n    index.rst  # this is the master table of contents\n    conf.py  # configuration for sphinx\n    requirements.txt  # specific reqs for documentation\n    source/  # directory where docstring files are automatically generated by sphinx\n    example.md  # markdown or rst files can be included here\n    ...  # other files can largely be ignored\n")),(0,a.kt)("h4",{id:"how-to-add-a-new-file"},"How to add a new file"),(0,a.kt)("ol",{start:0},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Set up a python environment as follows:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"conda create --name elr2-sphinx python=3.8\nconda activate elr2-sphinx\npip install -r requirements.txt  # elr2 requirements\npip install -r docs/requirements.txt  # sphinx requirements\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a new file e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"docs/example.md")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"You can also use ",(0,a.kt)("inlineCode",{parentName:"li"},".rst")," if you like"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Add this to the ",(0,a.kt)("inlineCode",{parentName:"p"},"index.rst")," file"),(0,a.kt)("p",{parentName:"li"},"You can add it to an existing section, or create a new one."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-rst"},".. toctree::\n:maxdepth: 1\n:caption: New Section\n\nexample\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"To test your changes locally run ",(0,a.kt)("inlineCode",{parentName:"p"},"make html"),":"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd docs\nmake html\n")),(0,a.kt)("p",{parentName:"li"},"This will update the html files in ",(0,a.kt)("inlineCode",{parentName:"p"},"docs/_build/html"),". You can open these\nfiles in your browser to test the changes / behavior.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Push your changes to master branch - the build pipeline will take care of the\nrest, i.e., it will push the changes to the webapp."))),(0,a.kt)("h3",{id:"setup"},"Setup"),(0,a.kt)("p",null,"This describes how this was setup."),(0,a.kt)("p",null,"Run quickstart to generate sphinx project scaffolding:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd docs\nsphinx-quickstart\n")),(0,a.kt)("p",null,"This will create ",(0,a.kt)("inlineCode",{parentName:"p"},"conf.py")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"index.rst")," (among other things)."),(0,a.kt)("p",null,"Update ",(0,a.kt)("inlineCode",{parentName:"p"},"conf.py")," with the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import os\nimport sys\nPATH_HERE = os.path.abspath(os.path.dirname(__file__))\nPATH_ROOT = os.path.join(PATH_HERE, '..', '..')\nsys.path.insert(0, os.path.abspath(PATH_ROOT))\n\nextensions = [\n    'sphinx.ext.napoleon',\n    'sphinx.ext.autodoc',\n    ... # added a bunch of extensions\n]\n\nnapoleon_google_docstring = True\n\nhtml_theme = 'sphinx_rtd_theme'\n")),(0,a.kt)("p",null,"Update the ",(0,a.kt)("inlineCode",{parentName:"p"},"index.rst")," file to have the desired layout for the homepage."),(0,a.kt)("p",null,"Now to generate the documentation run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd webapp\nsphinx-apidoc -o source ../src\n")),(0,a.kt)("p",null,"This will scan ",(0,a.kt)("inlineCode",{parentName:"p"},"../src")," for python modules and put their docstrings\nin ",(0,a.kt)("inlineCode",{parentName:"p"},"docs/source"),". You can see a bunch of ",(0,a.kt)("inlineCode",{parentName:"p"},".rst")," files in there now."),(0,a.kt)("p",null,"To build the html files manually you run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"make html\n")),(0,a.kt)("p",null,"This creates the html files in ",(0,a.kt)("inlineCode",{parentName:"p"},"docs/_build/html"),"."),(0,a.kt)("p",null,"Finally, to manually push these files to the azure webapp:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd _build/html\naz webapp up --name my-webapp --html\n")),(0,a.kt)("p",null,"Note: Very rarely the ",(0,a.kt)("inlineCode",{parentName:"p"},"az webapp up")," command might fail transiently - just re-run."))}c.isMDXComponent=!0}}]);