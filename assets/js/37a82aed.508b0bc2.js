"use strict";(self.webpackChunkaminsaied=self.webpackChunkaminsaied||[]).push([[7434],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(r),d=o,f=m["".concat(i,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(f,u(u({ref:t},c),{},{components:r})):n.createElement(f,u({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,u=new Array(a);u[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,u[1]=s;for(var l=2;l<a;l++)u[l]=r[l];return n.createElement.apply(null,u)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2191:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>u,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={},u="GitHub Workflows",s={unversionedId:"dsref/azure/azure-ml/github-workflows",id:"dsref/azure/azure-ml/github-workflows",title:"GitHub Workflows",description:"Goal: Add GitHub action to your repo to run Azure ML jobs.",source:"@site/docs/dsref/azure/azure-ml/github-workflows.md",sourceDirName:"dsref/azure/azure-ml",slug:"/dsref/azure/azure-ml/github-workflows",permalink:"/docs/dsref/azure/azure-ml/github-workflows",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"dsrefSidebar",previous:{title:"Submitting child runs from a parent",permalink:"/docs/dsref/azure/azure-ml/create-child-runs"},next:{title:"Manage logs via the AML Python SDK",permalink:"/docs/dsref/azure/azure-ml/logs"}},i={},l=[{value:"Step 1 - Azure, meet GitHub. Github, meet Azure.",id:"step-1---azure-meet-github-github-meet-azure",level:2},{value:"Step 2 - Create the GitHub Action",id:"step-2---create-the-github-action",level:2}],c={toc:l};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"github-workflows"},"GitHub Workflows"),(0,o.kt)("p",null,"Goal: Add GitHub action to your repo to run Azure ML jobs."),(0,o.kt)("p",null,"Typical use case: Run suite of tests in AzureML."),(0,o.kt)("p",null,"Steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Add secret to github to authenticate the workflow"),(0,o.kt)("li",{parentName:"ol"},"Create github action")),(0,o.kt)("h2",{id:"step-1---azure-meet-github-github-meet-azure"},"Step 1 - Azure, meet GitHub. Github, meet Azure."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/developer/github/connect-from-azure"},"https://docs.microsoft.com/en-us/azure/developer/github/connect-from-azure")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"az login\naz ad sp create-for-rbac --name {app-name} --role contributor --scopes /subscriptions/{subscription-id}/resourceGroups/{resource-group} --sdk-auth\n")),(0,o.kt)("p",null,"Concretely:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'az ad sp create-for-rbac --name "amsaied-sp" --role contributor \\\n    --scopes /subscriptions/${SUB_ID}/resourceGroups/amsaied-rg \\\n    --sdk-auth\n')),(0,o.kt)("p",null,"This returns json output like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "clientId": "<GUID>",\n    "clientSecret": "<GUID>",\n    "subscriptionId": "<GUID>",\n    "tenantId": "<GUID>",\n    (...)\n}\n')),(0,o.kt)("p",null,"Keep that information handy!"),(0,o.kt)("p",null,"Go to GitHub > Your repo > Settings > Secrets > Create Secret"),(0,o.kt)("p",null,"Call it something like ",(0,o.kt)("inlineCode",{parentName:"p"},"AZURE_CREDENTIALS")," and paste the json response from above as the value."),(0,o.kt)("h2",{id:"step-2---create-the-github-action"},"Step 2 - Create the GitHub Action"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"name: azureml canary\n\non:\n  workflow_dispatch:  # allows manual triggering of workflow against any branch\n  schedule:\n  - cron: '5 8 * * 0'  # runs once a week at 8.05 on day 0 (Monday)\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - name: check out repo\n      uses: actions/checkout@v2\n    - name: setup python\n      uses: actions/setup-python@v2\n      with: \n        python-version: \"3.8\"\n    - name: requirements\n      run: pip install azureml-sdk>=1.20.0\n    - name: azure login\n      uses: azure/login@v1\n      with:\n        creds: ${{secrets.AZURE_CREDENTIALS}}\n    - name: release canary\n      run: python examples/azureml/azureml_submit.py --backend ddp-amp --process_count 2 --wait\n")))}p.isMDXComponent=!0}}]);