"use strict";(self.webpackChunkaminsaied=self.webpackChunkaminsaied||[]).push([[3400],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=r,h=m["".concat(l,".").concat(u)]||m[u]||d[u]||o;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8725:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={title:"MkDocs",description:"MkDocs is a static site generator."},i=void 0,s={unversionedId:"dsref/python/mkdocs",id:"dsref/python/mkdocs",title:"MkDocs",description:"MkDocs is a static site generator.",source:"@site/docs/dsref/python/mkdocs.md",sourceDirName:"dsref/python",slug:"/dsref/python/mkdocs",permalink:"/docs/dsref/python/mkdocs",draft:!1,tags:[],version:"current",frontMatter:{title:"MkDocs",description:"MkDocs is a static site generator."},sidebar:"dsrefSidebar",previous:{title:"Conda",permalink:"/docs/dsref/python/conda_envs"},next:{title:"Pandas",permalink:"/docs/dsref/python/pandas"}},l={},p=[{value:"Basics",id:"basics",level:2},{value:"Github Pages",id:"github-pages",level:2},{value:"LaTeX",id:"latex",level:2},{value:"Material theme",id:"material-theme",level:2},{value:"PyMdown Extensions",id:"pymdown-extensions",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.mkdocs.org/"},"Mkdocs"),". It's a super simple static site generator."),(0,r.kt)("h2",{id:"basics"},"Basics"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"mkdocs serve  \\\\ local copy\nmkdocs build  \\\\ builds site\n")),(0,r.kt)("h2",{id:"github-pages"},"Github Pages"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"mkdocs build")," command will generate a ",(0,r.kt)("inlineCode",{parentName:"p"},"site")," directory with a bunch of ",(0,r.kt)("inlineCode",{parentName:"p"},".html")," pages that comprise your static website. However, by default github pages sites will look for the html in a special branch called ",(0,r.kt)("inlineCode",{parentName:"p"},"gh-pages"),". You could manually create this branch and copy the html files over, but thankfully mkdocs has a command that automates this!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"mkdocs gh-deploy\n")),(0,r.kt)("h2",{id:"latex"},"LaTeX"),(0,r.kt)("p",null,"To get latex working in your project"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"pip install https://github.com/mitya57/python-markdown-math/archive/master.zip\n")),(0,r.kt)("p",null,"Then in ",(0,r.kt)("inlineCode",{parentName:"p"},"<your-project>/config.yaml")," add the following"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"extra_javascript:\n    - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML\n\nmarkdown_extensions:\n    - mdx_math\n")),(0,r.kt)("h2",{id:"material-theme"},"Material theme"),(0,r.kt)("p",null,"To get material working in your project"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"pip install mkdocs-material\n")),(0,r.kt)("p",null,"Then in ",(0,r.kt)("inlineCode",{parentName:"p"},"<your-project>/config.yaml")," add the following"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"theme:\n  name: 'material'\n")),(0,r.kt)("h2",{id:"pymdown-extensions"},"PyMdown Extensions"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://facelessuser.github.io/pymdown-extensions/"},"Official docs"),". Install with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ pip install pymdown-extensions\n")),(0,r.kt)("p",null,"Then in ",(0,r.kt)("inlineCode",{parentName:"p"},"<your-project>/config.yaml")," add ",(0,r.kt)("inlineCode",{parentName:"p"},"pymdownx.<extension>")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"markdown_extensions"),". For example, to add the ",(0,r.kt)("a",{parentName:"p",href:"https://facelessuser.github.io/pymdown-extensions/extensions/tabbed/"},"Tabbed")," extension do:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"markdown_extensions:\n    - pymdownx.tabbed\n")),(0,r.kt)("p",null,"Examples of how to specify and use each extension ",(0,r.kt)("a",{parentName:"p",href:"https://squidfunk.github.io/mkdocs-material/extensions/pymdown/"},"here"),"."))}d.isMDXComponent=!0}}]);