"use strict";(self.webpackChunkaminsaied=self.webpackChunkaminsaied||[]).push([[7794],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},i=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(f,u(u({ref:t},i),{},{components:n})):r.createElement(f,u({ref:t},i))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,u=new Array(o);u[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,u[1]=s;for(var c=2;c<o;c++)u[c]=n[c];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6654:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>u,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={title:"Compute Instances"},u=void 0,s={unversionedId:"dsref/azure/azure-ml/compute-instance",id:"dsref/azure/azure-ml/compute-instance",title:"Compute Instances",description:"What is a compute instance (CI)? It is Azure ML's answer to virtual machines (VMs). A compute instance is attached to your Azure ML Workspace.",source:"@site/docs/dsref/azure/azure-ml/compute-instance.md",sourceDirName:"dsref/azure/azure-ml",slug:"/dsref/azure/azure-ml/compute-instance",permalink:"/docs/dsref/azure/azure-ml/compute-instance",draft:!1,tags:[],version:"current",frontMatter:{title:"Compute Instances"},sidebar:"dsrefSidebar",previous:{title:"Azure CLI",permalink:"/docs/dsref/azure/azure-ml/azure-cli"},next:{title:"Compute Usage Metrics",permalink:"/docs/dsref/azure/azure-ml/compute-usage"}},l={},c=[{value:"Managing your compute instance from the terminal",id:"managing-your-compute-instance-from-the-terminal",level:2},{value:"Install Azure CLI",id:"install-azure-cli",level:3},{value:"Create Compute Instance",id:"create-compute-instance",level:3},{value:"Update SSH Config",id:"update-ssh-config",level:3}],i={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"What is a compute instance (CI)? It is Azure ML's answer to virtual machines (VMs). A compute instance is attached to your Azure ML Workspace."),(0,a.kt)("h2",{id:"managing-your-compute-instance-from-the-terminal"},"Managing your compute instance from the terminal"),(0,a.kt)("p",null,"Goals:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use SSH to connect to your CI"),(0,a.kt)("li",{parentName:"ul"},"Use Azure CLI to start/stop your CI")),(0,a.kt)("p",null,'Note: When creating your CI make sure you use the option "enable SSH" and provide your SSH public key.'),(0,a.kt)("h3",{id:"install-azure-cli"},"Install Azure CLI"),(0,a.kt)("p",null,"Install the Azure ML CLI extension"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash\naz extension add -n azure-cli-ml\n")),(0,a.kt)("h3",{id:"create-compute-instance"},"Create Compute Instance"),(0,a.kt)("p",null,"Navigate to your workspace at ml.azure.com > Compute > Compute instances > + New"),(0,a.kt)("p",null,"When creating your CI make sure to enable SSH. Once your compute is created you will see an SSH option under Application URI. This will give you the IP address associated to your CI, as well as the Port. You will see something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"User name\nazureuser\n\nPublib IP address\n53.250.37.121\n\nPrivate IP address\n10.0.0.4\n\nPort number \n50000\n\nLogin using local account\nssh azureuser@53.250.37.121 -p 50000\n")),(0,a.kt)("p",null,"Note: This IP address / port are stable."),(0,a.kt)("h3",{id:"update-ssh-config"},"Update SSH Config"),(0,a.kt)("p",null,"To simplify SSH'ing into your CI you can update you SSH config file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"nano ~/.ssh/config\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Host my-ci\n  HostName 53.250.37.121\n  User azureuser\n  Port 50000\n")),(0,a.kt)("p",null,"If your CI is running you can now run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ssh my-ci\n")),(0,a.kt)("p",null,"Note - if you want to start or stop your CI you can use the Azure ML CLI"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"az ml computetarget computeinstance start -n <compute-instance-name> -w <workspace-name> -g <resource-group-name>\n")),(0,a.kt)("p",null,"or "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"az ml computetarget computeinstance stop -n <compute-instance-name> -w <workspace-name> -g <resource-group-name>\n")))}p.isMDXComponent=!0}}]);