"use strict";(self.webpackChunkaminsaied=self.webpackChunkaminsaied||[]).push([[7096],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},b=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),b=s(t),d=r,m=b["".concat(l,".").concat(d)]||b[d]||c[d]||o;return t?a.createElement(m,i(i({ref:n},u),{},{components:t})):a.createElement(m,i({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=b;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},8227:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const o={title:"Azure Web Apps",sidebar_position:1},i=void 0,p={unversionedId:"dsref/azure/webapp",id:"dsref/azure/webapp",title:"Azure Web Apps",description:"Creating an azure webapp",source:"@site/docs/dsref/azure/webapp.md",sourceDirName:"dsref/azure",slug:"/dsref/azure/webapp",permalink:"/docs/dsref/azure/webapp",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Azure Web Apps",sidebar_position:1},sidebar:"dsrefSidebar",previous:{title:"API Management",permalink:"/docs/dsref/azure/api-management-service"},next:{title:"Azure ML",permalink:"/docs/category/azure-ml"}},l={},s=[{value:"Creating an azure webapp",id:"creating-an-azure-webapp",level:2},{value:"Automating deployment with GitHub actions",id:"automating-deployment-with-github-actions",level:2}],u={toc:s};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"creating-an-azure-webapp"},"Creating an azure webapp"),(0,r.kt)("p",null,"The simplest way to create an azure webapp is using the az cli tool."),(0,r.kt)("p",null,"e.g."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd build  # build folder with the generated html files\naz webapp up --sku F1 -n my-webapp -g my-rg --subscription $SUB_ID --html\n")),(0,r.kt)("p",null,'This will create a new webapp "my-webapp" in the resource group "my-rg" under your\nsubscription.'),(0,r.kt)("p",null,"In manually make updates you would do something like"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn build\ncd build\naz webapp up -n my-webapp -g my-rg --subscription $SUB_ID --html\n")),(0,r.kt)("h2",{id:"automating-deployment-with-github-actions"},"Automating deployment with GitHub actions"),(0,r.kt)("p",null,"Notes from: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Azure/login"},"https://github.com/Azure/login")),(0,r.kt)("p",null,"The above steps allow you to manually build and deploy your webapp. Let's\nautomate this with GitHub actions to run on PRs to ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch."),(0,r.kt)("p",null,"First we need to create a service principle for authentication:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'az ad sp create-for-rbac --name "{sp-name}" --sdk-auth --role contributor \\\n    --scopes /subscriptions/{subscription-id}/resourceGroups/{resource-group}\n')),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'az ad sp create-for-rbac --name "babel-webapp-sp" --sdk-auth --role contributor --scopes /subscriptions/$SUB_ID/resourceGroups/babel-rg\n')),(0,r.kt)("p",null,"If this works you will see something like"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "clientId": "<GUID>",\n  "clientSecret": "<GUID>",\n  "subscriptionId": "<GUID>",\n  "tenantId": "<GUID>",\n  (...)\n}\n')),(0,r.kt)("p",null,"Now we'll add a GitHub secrete called ",(0,r.kt)("inlineCode",{parentName:"p"},"AZURE_CREDENTIALS")," will the above json."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Visit the repo"),(0,r.kt)("li",{parentName:"ul"},'Go "Settings" > "Secrets" > "New repository secret"'),(0,r.kt)("li",{parentName:"ul"},"Name: ",(0,r.kt)("inlineCode",{parentName:"li"},"AZURE_CREDENTIALS")),(0,r.kt)("li",{parentName:"ul"},"Secret: Copy the json output of the az ad sp create-for-rbac command above")),(0,r.kt)("p",null,"Finally, create a github action ",(0,r.kt)("inlineCode",{parentName:"p"},"<your-repo>/.github/workflows/deploy.yml")," something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Deploy Node.js to Azure Web App\n\non:\n  pull_request:\n    branches: [main]\n    paths: [webpage/**]\n  push:\n    branches: [main]\n    paths: [webpage/**]\n\nenv:\n  AZURE_WEBAPP_NAME: babel-webapp\n  AZURE_WEBAPP_PACKAGE_PATH: './webpage'\n  NODE_VERSION: '12.x'\n\njobs:\n  checks:\n    if: github.event_name != 'push'\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v1\n      - uses: actions/setup-node@v1\n        with:\n          node-version: ${{ env.NODE_VERSION }}\n      - name: Test Build\n        run: |\n          cd webpage\n          if [ -e yarn.lock ]; then\n          yarn install --frozen-lockfile\n          elif [ -e package-lock.json ]; then\n          npm ci\n          else\n          npm i\n          fi\n          yarn build\n  build-and-deploy:\n    if: github.event_name != 'pull_request'\n    name: Build and Deploy\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@main\n    - name: Use Node.js ${{ env.NODE_VERSION }}\n      uses: actions/setup-node@v1\n      with:\n        node-version: ${{ env.NODE_VERSION }}\n    - name: az login\n      uses: azure/login@v1\n      with:\n        creds: ${{ secrets.AZURE_CREDENTIALS }}\n        allow-no-subscriptions: true\n    - name: yarn build and az webapp up\n      run: |\n        cd webpage\n        if [ -e yarn.lock ]; then\n        yarn install --frozen-lockfile\n        elif [ -e package-lock.json ]; then\n        npm ci\n        else\n        npm i\n        fi\n        yarn build\n        cd build\n        az webapp up -n babel-webapp -g babel-rg --html\n")))}c.isMDXComponent=!0}}]);