"use strict";(self.webpackChunkaminsaied=self.webpackChunkaminsaied||[]).push([[7137],{3905:(e,r,n)=>{n.d(r,{Zo:()=>s,kt:()=>m});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function u(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),l=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},s=function(e){var r=l(e.components);return t.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),f=l(n),m=o,d=f["".concat(c,".").concat(m)]||f[m]||p[m]||a;return n?t.createElement(d,i(i({ref:r},s),{},{components:n})):t.createElement(d,i({ref:r},s))}));function m(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var u={};for(var c in r)hasOwnProperty.call(r,c)&&(u[c]=r[c]);u.originalType=e,u.mdxType="string"==typeof e?e:o,i[1]=u;for(var l=2;l<a;l++)i[l]=n[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5806:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>u,toc:()=>l});var t=n(7462),o=(n(7294),n(3905));const a={title:"Submitting child runs from a parent"},i=void 0,u={unversionedId:"dsref/azure/azure-ml/create-child-runs",id:"dsref/azure/azure-ml/create-child-runs",title:"Submitting child runs from a parent",description:"From Microsoft docs.",source:"@site/docs/dsref/azure/azure-ml/create-child-runs.md",sourceDirName:"dsref/azure/azure-ml",slug:"/dsref/azure/azure-ml/create-child-runs",permalink:"/docs/dsref/azure/azure-ml/create-child-runs",draft:!1,tags:[],version:"current",frontMatter:{title:"Submitting child runs from a parent"},sidebar:"dsrefSidebar",previous:{title:"Compute Usage Metrics",permalink:"/docs/dsref/azure/azure-ml/compute-usage"},next:{title:"GitHub Workflows",permalink:"/docs/dsref/azure/azure-ml/github-workflows"}},c={},l=[{value:"Log to the parent run from within the child run",id:"log-to-the-parent-run-from-within-the-child-run",level:2}],s={toc:l};function p(e){let{components:r,...n}=e;return(0,o.kt)("wrapper",(0,t.Z)({},s,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"From Microsoft ",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/machine-learning/how-to-manage-runs#submit-child-runs"},"docs"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# parent.py\n# This script controls the launching of child scripts\nfrom azureml.core import Run, ScriptRunConfig, RunConfiguration\n\nrun_config_for_aml_compute = RunConfiguration()\nrun_config_for_aml_compute.target = \"gpu-compute\"\nrun_config_for_aml_compute.environment.docker.enabled = True \n\nrun = Run.get_context()\n\nchild_args = ['Apple', 'Banana', 'Orange']\nfor arg in child_args: \n    run.log('Status', f'Launching {arg}')\n    child_config = ScriptRunConfig(\n        source_directory=\".\",\n        script='child.py',\n        arguments=['--fruit', arg],\n        run_config = run_config_for_aml_compute\n        )\n    # Starts the run asynchronously\n    run.submit_child(child_config)\n\n# Experiment will \"complete\" successfully at this point. \n# Instead of returning immediately, block until child runs complete\n\nfor child in run.get_children():\n    child.wait_for_completion()\n")),(0,o.kt)("h2",{id:"log-to-the-parent-run-from-within-the-child-run"},"Log to the parent run from within the child run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py3"},'from azureml.core import Run\n\n# from within the child run\nrun = Run.get_context()\nparent_run = run.parent\n\n# write logs to parent run\nparent_run.log("Foo", 73)\n')))}p.isMDXComponent=!0}}]);